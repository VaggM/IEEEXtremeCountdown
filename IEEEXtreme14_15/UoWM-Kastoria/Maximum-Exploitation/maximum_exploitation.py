#
#   CSAcademy Problem - Maximum Exploitation
#   From: IEEEXtreme 15.0
#   Solved By: Dimitrios and Petros Papakonstantinou
#   Submission Score: 100/100 (1341ms - 42.6MB)
#

def main():
    # First input line: row and col
    row, col = map(int, input().split())
    
    # Second input line: x and y
    x, y = map(int, input().split())

    # Initialize Row, Col, and sum arrays
    Row = [0] * (row + 1)
    Col = [0] * (col + 1)
    sum_ = [[0] * (col + 1) for _ in range(row + 1)]

    # Read the matrix values and fill the sum array
    for r in range(1, row + 1):
        values = list(map(int, input().split()))  # Read a row of the matrix
        Row[r] = max(Row[r], Row[r - 1])

        for c in range(1, col + 1):
            Col[c] = max(Col[c], Col[c - 1])

            sum_[r][c] = values[c - 1]  # Map the input value to the sum array

            # Update the cumulative sum
            sum_[r][c] = sum_[r][c] - sum_[r - 1][c - 1] + sum_[r][c - 1] + sum_[r - 1][c]

            # Check for x × y subarray
            if r >= x and c >= y:
                xySum = sum_[r][c] - sum_[r - x][c] - sum_[r][c - y] + sum_[r - x][c - y]
                Row[r] = max(Row[r], xySum)
                Col[c] = max(Col[c], xySum)

            # Check for y × x subarray
            if r >= y and c >= x:
                yxSum = sum_[r][c] - sum_[r - y][c] - sum_[r][c - x] + sum_[r - y][c - x]
                Row[r] = max(Row[r], yxSum)
                Col[c] = max(Col[c], yxSum)

    # Calculate the final result
    ans = 0
    for r in range(1, row + 1):
        for c in range(1, col + 1):
            # Check for x × y subarray
            if r >= x and c >= y:
                xySum = sum_[r][c] - sum_[r - x][c] - sum_[r][c - y] + sum_[r - x][c - y]
                ans = max(ans, xySum + max(Row[r - x], Col[c - y]))

            # Check for y × x subarray
            if r >= y and c >= x:
                yxSum = sum_[r][c] - sum_[r - y][c] - sum_[r][c - x] + sum_[r - y][c - x]
                ans = max(ans, yxSum + max(Row[r - y], Col[c - x]))

    # Print the final answer
    print(ans)

# Run the main function
if __name__ == "__main__":
    main()

